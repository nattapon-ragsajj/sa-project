import { useEffect, useState } from "react";
import { NavLink, Outlet,useNavigate } from "react-router-dom";
import "./home.css";
import "./picture.css";


function Home() {
  const [storeOpen, setStoreOpen] = useState(false);
  const [dashOpen, setDashOpen] = useState(false);
  const navigate = useNavigate();

  // ‡∏õ‡∏¥‡∏î‡πÅ‡∏ú‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î ESC
  useEffect(() => {
    const onKey = (e: { key: string; }) => {
      if (e.key === "Escape") 
        setDashOpen(false);
        setStoreOpen(false);
    };
    window.addEventListener("keydown", onKey);
    return () => window.removeEventListener("keydown", onKey);
  }, []);

  // ‡∏Å‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏ï‡∏≠‡∏ô‡πÄ‡∏õ‡∏¥‡∏î dashboard
  useEffect(() => {
    if (dashOpen) document.body.classList.add("no-scroll");
    else document.body.classList.remove("no-scroll");
    return () => document.body.classList.remove("no-scroll");
  }, [dashOpen]);

  return (
    <div className="layout">
      <div className="fullscreenHome"></div>
      {/* Navbar */}
      <header className="navbar">
        <div className="logo">Manufacturing System</div>

        {/* ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å: ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏•‡∏≠‡∏î */}
        <nav className="menu">
          {/* ‡πÉ‡∏ä‡πâ NavLink ‡πÄ‡∏û‡∏∑‡πà‡∏≠ active state ‡πÅ‡∏•‡∏∞ ‚Äú‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ç‡∏≠‡∏á Home‚Äù ‡∏î‡πâ‡∏ß‡∏¢ path ‡πÅ‡∏ö‡∏ö relative */}
          <NavLink to="product-produce" className="nav-link">‡∏ú‡∏•‡∏¥‡∏ï‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</NavLink>
          {/*<NavLink to="raw-material"    className="nav-link">‡∏Ñ‡∏•‡∏±‡∏á‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö</NavLink>*/}
          {/*<NavLink to="warehouse"       className="nav-link">‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</NavLink>*/}
          {/* ===== ‡∏î‡∏£‡∏≠‡∏õ‡∏î‡∏≤‡∏ß‡∏ô‡πå: ‡∏Ñ‡∏•‡∏±‡∏á ===== */}
          <div
            className={`menu-item ${storeOpen ? "open" : ""}`}
            onMouseEnter={() => setStoreOpen(true)}
            onMouseLeave={() => setStoreOpen(false)}
          >
            <button
              type="button"
              className="nav-link has-caret"
              aria-haspopup="true"
              aria-expanded={storeOpen}
              onClick={() => setStoreOpen(v => !v)} // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Ñ‡∏•‡∏¥‡∏Å/‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠
            >
              ‡∏Ñ‡∏•‡∏±‡∏á ‚ñæ
            </button>

            <div className="dropdown" role="menu">
              <button className="dropdown-link" onClick={() => navigate("warehouse")}>
                ‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
              </button>
              <button className="dropdown-link" onClick={() => navigate("raw-material")}>
                ‡∏Ñ‡∏•‡∏±‡∏á‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö
              </button>
            </div>
          </div>
          {/* ===== ‡∏à‡∏ö‡∏î‡∏£‡∏≠‡∏õ‡∏î‡∏≤‡∏ß‡∏ô‡πå ===== */}

          <NavLink to="production-order" className="nav-link">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</NavLink>
          <NavLink to="q-control"     className="nav-link">‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</NavLink>
          <NavLink to="sales-list"      className="nav-link">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</NavLink>
          {/*<NavLink to="product-produce" className="nav-link">‡∏ú‡∏•‡∏¥‡∏ï‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</NavLink>*/}

        </nav>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤ */}
        <div className="right-menu">
          <span className="bell" aria-hidden="true">üîî</span>

          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏°‡∏Ç‡∏µ‡∏î = ‡πÄ‡∏õ‡∏¥‡∏î Dashboard 
          <button
            type="button"
            className={`hamburger ${dashOpen ? "active" : ""}`}
            aria-label="Toggle dashboard"
            aria-expanded={dashOpen}
            onClick={() => setDashOpen((v) => !v)}
          >
            <span></span><span></span><span></span>
          </button>*/}
        </div>
      </header>

      {/* ‡∏ó‡∏µ‡πà‡∏ß‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏•‡∏π‡∏Å (‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ï‡πâ Navbar ‡∏ï‡∏•‡∏≠‡∏î) */}
      <main className="content-shell">
        <Outlet />
      </main>

      {/* Overlay */}
      {dashOpen && (
        <button
          className="dash-overlay"
          aria-label="Close dashboard"
          onClick={() => setDashOpen(false)}
        />
      )}

      {/* Dashboard Side Panel */}
      <aside className={`dashboard ${dashOpen ? "open" : ""}`} aria-hidden={!dashOpen}>
        <div className="dash-header">
          <h3>Dashboard</h3>
          <button className="dash-close" onClick={() => setDashOpen(false)} aria-label="Close">
            √ó
          </button>
        </div>

        <nav className="dash-links">
          <a href="#">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (Production Order)</a>
          <a href="#">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (Inventory)</a>
          <a href="#">‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (Quality Control)</a>
          <a href="#">‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô (Reports)</a>
          <a href="#">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ (Setting)</a>
        </nav>
      </aside>
    </div>
  );
}

export default Home;
