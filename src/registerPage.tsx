import { useState } from "react";
import { useNavigate } from "react-router-dom";
import "./picture.css";
import "./keyword.css";

export default function RegisterPage() {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [confirm, setConfirm] = useState("");
  const [role, setRole] = useState("");
  const [error, setError] = useState("");
  const navigate = useNavigate();

  const handleRegister = () => {
    if (!username || !password || !confirm || !role) {
      setError("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á");
      return;
    }
    if (password !== confirm) {
      setError("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô");
      return;
    }

    const newUser = { username, password, role };
    localStorage.setItem("user", JSON.stringify(newUser));
    alert("‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
    navigate("/");
  };

  return (
    <div
      className="fullscreen"
      style={{
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        flexDirection: "column",
        minHeight: "100vh", // ‚úÖ ‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≠‡∏ñ‡πâ‡∏≤‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ô‡πâ‡∏≠‡∏¢
        padding: "40px 0", // ‚úÖ ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏¢‡∏∞‡∏Ç‡∏≠‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏•‡πà‡∏≤‡∏á
        overflow: "hidden",
      }}
    >
      {/* ‚ùÑÔ∏è ‡∏´‡∏¥‡∏°‡∏∞‡∏ï‡∏Å */}
      {Array.from({ length: 50 }).map((_, i) => (
        <div
          key={i}
          className="snowflake"
          style={{
            left: Math.random() * window.innerWidth + "px",
            animationDuration: 3 + Math.random() * 6 + "s",
            fontSize: 10 + Math.random() * 30 + "px",
          }}
        >
          .
        </div>
      ))}

      {/* üîπ ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å (‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß) */}
      <div
        className="card"
        style={{
          width: "380px",
          background: "rgba(255, 255, 255, 0.15)", // ‚úÖ ‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™
          borderRadius: "20px",
          padding: "40px 30px",
          display: "flex",
          flexDirection: "column",
          alignItems: "center",
          textAlign: "center",
          position: "relative",
          backdropFilter: "blur(10px)",
          boxShadow: "0 8px 25px rgba(0,0,0,0.3)",
          height: "auto", // ‚úÖ ‡∏¢‡∏∑‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
        }}
      >
        <h1
          style={{
            color: "white",
            fontSize: "2rem",
            marginBottom: "25px",
            textShadow: "0 0 6px rgba(0,0,0,0.4)",
          }}
        >
          ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà
        </h1>

        {/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£ */}
        <div
          style={{
            display: "flex",
            flexDirection: "column",
            width: "100%",
            gap: "10px",
          }}
        >
          <label
            style={{
              fontSize: "13px",
              color: "white",
              textAlign: "left",
            }}
          >
            ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
          </label>
          <input
            type="text"
            placeholder="Username"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
            style={{
              padding: "10px",
              borderRadius: "10px",
              border: "1px solid rgba(255,255,255,0.3)",
              backgroundColor: "rgba(255,255,255,0.1)",
              color: "white",
            }}
          />

          <label style={{ fontSize: "13px", color: "white", textAlign: "left" }}>
            ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
          </label>
          <input
            type="password"
            placeholder="Password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            style={{
              padding: "10px",
              borderRadius: "10px",
              border: "1px solid rgba(255,255,255,0.3)",
              backgroundColor: "rgba(255,255,255,0.1)",
              color: "white",
            }}
          />

          <label style={{ fontSize: "13px", color: "white", textAlign: "left" }}>
            ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
          </label>
          <input
            type="password"
            placeholder="Confirm Password"
            value={confirm}
            onChange={(e) => setConfirm(e.target.value)}
            style={{
              padding: "10px",
              borderRadius: "10px",
              border: "1px solid rgba(255,255,255,0.3)",
              backgroundColor: "rgba(255,255,255,0.1)",
              color: "white",
            }}
          />

          <label style={{ fontSize: "13px", color: "white", textAlign: "left" }}>
            ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á / ‡∏ù‡πà‡∏≤‡∏¢
          </label>
          <select
            value={role}
            onChange={(e) => setRole(e.target.value)}
            style={{
              padding: "10px",
              borderRadius: "10px",
              border: "1px solid rgba(255,255,255,0.3)",
              backgroundColor: "rgba(255,255,255,0.9)", // ‚úÖ ‡∏û‡∏∑‡πâ‡∏ô‡∏Ç‡∏≤‡∏ß
              color: "black", // ‚úÖ ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏î‡∏≥
            }}
          >
            <option value="">-- ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ù‡πà‡∏≤‡∏¢ --</option>
            <option value="warehouse">‡∏ù‡πà‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏±‡∏á</option>
            <option value="production">‡∏ù‡πà‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï</option>
            <option value="qa">‡∏ù‡πà‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û</option>
          </select>

          {/* ‚ùó Error */}
          {error && (
            <p
              style={{
                color: "#ff6666",
                fontSize: "13px",
                marginTop: "5px",
                textAlign: "center",
              }}
            >
              {error}
            </p>
          )}

          <button
            onClick={handleRegister}
            style={{
              marginTop: "20px",
              fontSize: "0.9rem",
              width: "100%",
              padding: "12px",
              borderRadius: "10px",
              border: "none",
              backgroundColor: "rgba(0, 102, 255, 0.9)",
              color: "white",
              cursor: "pointer",
              transition: "background-color 0.3s ease",
            }}
            onMouseEnter={(e) =>
              (e.currentTarget.style.backgroundColor = "rgba(0, 60, 200, 1)")
            }
            onMouseLeave={(e) =>
              (e.currentTarget.style.backgroundColor = "rgba(0, 102, 255, 0.9)")
            }
          >
            ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
          </button>

          <span
            onClick={() => navigate("/")}
            style={{
              textAlign: "center",
              color: "#add8e6",
              fontSize: "12px",
              cursor: "pointer",
              marginTop: "10px",
            }}
          >
            ‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
          </span>
        </div>
      </div>
    </div>
  );
}
